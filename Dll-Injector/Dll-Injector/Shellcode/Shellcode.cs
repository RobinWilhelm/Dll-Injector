using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Runtime.InteropServices;
using Dll_Injector.Utils;

namespace Dll_Injector.Shellcode
{
    class Shellcode
    {
        public static void CopyToByteArray<T>(T source, byte[] destination, int offset)
        {
            if (destination == null)
                throw new ArgumentException("Destination array cannot be null");
                                
            int size = Marshal.SizeOf<T>();

            byte[] sourcebytes = BinaryConverter.Serialize<T>(source);

            // check if there is enough space for all the 4 bytes we will copy
            if (destination.Length < offset + size)
                throw new ArgumentException("Not enough room in the destination array");

                                 
            for (int byteoffset = 0; byteoffset < size; byteoffset++)
            {
                destination[offset + byteoffset] = sourcebytes[byteoffset];
            }
        }

        public static byte[] reflectiveloader_shellcode_x64 = new byte[] {0x48, 0x89, 0x4C, 0x24, 0x8, 0x48, 0x81, 0xEC, 0x18, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x0, 0x48, 0x89, 0x84, 0x24, 0xB0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0xB0, 0x0, 0x0, 0x0, 0xF, 0xB7, 0x0, 0x3D, 0x4D, 0x5A, 0x0, 0x0, 0x74, 0x7, 0x33, 0xC0, 0xE9, 0xB6, 0x9, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0xB0, 0x0, 0x0, 0x0, 0x48, 0x63, 0x40, 0x3C, 0x48, 0x8B, 0x8C, 0x24, 0x20, 0x1, 0x0, 0x0, 0x48, 0x3, 0x1, 0x48, 0x89, 0x44, 0x24, 0x70, 0x48, 0x8B, 0x44, 0x24, 0x70, 0x81, 0x38, 0x50, 0x45, 0x0, 0x0, 0x74, 0x7, 0x33, 0xC0, 0xE9, 0x86, 0x9, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x70, 0x8B, 0x40, 0x50, 0x41, 0xB9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xB8, 0x0, 0x20, 0x0, 0x0, 0x8B, 0xD0, 0x48, 0x8B, 0x44, 0x24, 0x70, 0x48, 0x8B, 0x48, 0x30, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x18, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x83, 0x7C, 0x24, 0x28, 0x0, 0x75, 0x28, 0x48, 0x8B, 0x44, 0x24, 0x70, 0x8B, 0x40, 0x50, 0x41, 0xB9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xB8, 0x0, 0x20, 0x0, 0x0, 0x8B, 0xD0, 0x33, 0xC9, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x18, 0x48, 0x89, 0x44, 0x24, 0x28, 0x48, 0x8B, 0x44, 0x24, 0x70, 0x8B, 0x40, 0x54, 0x41, 0xB9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xB8, 0x0, 0x10, 0x0, 0x0, 0x8B, 0xD0, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x18, 0x48, 0xC7, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x13, 0x48, 0x8B, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0xFF, 0xC0, 0x48, 0x89, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x70, 0x8B, 0x40, 0x54, 0x48, 0x39, 0x84, 0x24, 0x80, 0x0, 0x0, 0x0, 0x73, 0x2E, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x0, 0x48, 0x8B, 0x8C, 0x24, 0x80, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x3, 0xD1, 0x48, 0x8B, 0xCA, 0x48, 0x8B, 0x94, 0x24, 0x80, 0x0, 0x0, 0x0, 0xF, 0xB6, 0x4, 0x10, 0x88, 0x1, 0xEB, 0xAD, 0x48, 0x8B, 0x84, 0x24, 0xB0, 0x0, 0x0, 0x0, 0x48, 0x63, 0x40, 0x3C, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x38, 0xC7, 0x44, 0x24, 0x60, 0x0, 0x0, 0x0, 0x0, 0xEB, 0xA, 0x8B, 0x44, 0x24, 0x60, 0xFF, 0xC0, 0x89, 0x44, 0x24, 0x60, 0x48, 0x8B, 0x44, 0x24, 0x38, 0xF, 0xB7, 0x40, 0x6, 0x39, 0x44, 0x24, 0x60, 0xF, 0x8D, 0x5E, 0x2, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x38, 0xF, 0xB7, 0x40, 0x14, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x48, 0x8D, 0x44, 0x1, 0x18, 0x48, 0x63, 0x4C, 0x24, 0x60, 0x48, 0x6B, 0xC9, 0x28, 0x48, 0x3, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x40, 0x48, 0xC7, 0x84, 0x24, 0xB8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x83, 0x78, 0x10, 0x0, 0xF, 0x84, 0xB4, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x8B, 0x40, 0x10, 0x48, 0x8B, 0x4C, 0x24, 0x40, 0x8B, 0x49, 0xC, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x3, 0xD1, 0x48, 0x8B, 0xCA, 0x41, 0xB9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xB8, 0x0, 0x10, 0x0, 0x0, 0x8B, 0xD0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x18, 0x48, 0x89, 0x84, 0x24, 0xB8, 0x0, 0x0, 0x0, 0x48, 0xC7, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x13, 0x48, 0x8B, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x48, 0xFF, 0xC0, 0x48, 0x89, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x8B, 0x40, 0x10, 0x48, 0x39, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x73, 0x40, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x8B, 0x40, 0x14, 0x48, 0x8B, 0x8C, 0x24, 0x20, 0x1, 0x0, 0x0, 0x48, 0x3, 0x1, 0x48, 0x8B, 0x4C, 0x24, 0x40, 0x8B, 0x49, 0xC, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x3, 0xD1, 0x48, 0x8B, 0xCA, 0x48, 0x8B, 0x94, 0x24, 0x88, 0x0, 0x0, 0x0, 0x4C, 0x8B, 0x84, 0x24, 0x88, 0x0, 0x0, 0x0, 0x42, 0xF, 0xB6, 0x4, 0x0, 0x88, 0x4, 0x11, 0xEB, 0x9B, 0xE9, 0x66, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x83, 0x78, 0x24, 0x40, 0xF, 0x85, 0xA5, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x8B, 0x40, 0x20, 0x48, 0x8B, 0x4C, 0x24, 0x40, 0x8B, 0x49, 0xC, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x3, 0xD1, 0x48, 0x8B, 0xCA, 0x41, 0xB9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xB8, 0x0, 0x10, 0x0, 0x0, 0x8B, 0xD0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x18, 0x48, 0x89, 0x84, 0x24, 0xB8, 0x0, 0x0, 0x0, 0x48, 0xC7, 0x84, 0x24, 0x98, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x13, 0x48, 0x8B, 0x84, 0x24, 0x98, 0x0, 0x0, 0x0, 0x48, 0xFF, 0xC0, 0x48, 0x89, 0x84, 0x24, 0x98, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x8B, 0x40, 0x20, 0x48, 0x39, 0x84, 0x24, 0x98, 0x0, 0x0, 0x0, 0x73, 0x21, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x8B, 0x40, 0xC, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x8B, 0x8C, 0x24, 0x98, 0x0, 0x0, 0x0, 0xC6, 0x4, 0x8, 0x0, 0xEB, 0xBA, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x8B, 0x49, 0x20, 0x89, 0x48, 0x10, 0xE9, 0xB2, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x81, 0x78, 0x24, 0x80, 0x0, 0x0, 0x0, 0xF, 0x85, 0xA0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x8B, 0x40, 0x24, 0x48, 0x8B, 0x4C, 0x24, 0x40, 0x8B, 0x49, 0xC, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x3, 0xD1, 0x48, 0x8B, 0xCA, 0x41, 0xB9, 0x4, 0x0, 0x0, 0x0, 0x41, 0xB8, 0x0, 0x10, 0x0, 0x0, 0x8B, 0xD0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x18, 0x48, 0x89, 0x84, 0x24, 0xB8, 0x0, 0x0, 0x0, 0x48, 0xC7, 0x84, 0x24, 0xA0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x13, 0x48, 0x8B, 0x84, 0x24, 0xA0, 0x0, 0x0, 0x0, 0x48, 0xFF, 0xC0, 0x48, 0x89, 0x84, 0x24, 0xA0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x8B, 0x40, 0x24, 0x48, 0x39, 0x84, 0x24, 0xA0, 0x0, 0x0, 0x0, 0x73, 0x21, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x8B, 0x40, 0xC, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x8B, 0x8C, 0x24, 0xA0, 0x0, 0x0, 0x0, 0xC6, 0x4, 0x8, 0x0, 0xEB, 0xBA, 0x48, 0x8B, 0x44, 0x24, 0x40, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x8B, 0x49, 0x24, 0x89, 0x48, 0x10, 0xE9, 0x85, 0xFD, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x48, 0x8B, 0x40, 0x30, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x2B, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x84, 0x24, 0xA8, 0x0, 0x0, 0x0, 0x48, 0x83, 0xBC, 0x24, 0xA8, 0x0, 0x0, 0x0, 0x0, 0xF, 0x84, 0xB6, 0x1, 0x0, 0x0, 0xB8, 0x8, 0x0, 0x0, 0x0, 0x48, 0x6B, 0xC0, 0x5, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x48, 0x8D, 0x84, 0x1, 0x88, 0x0, 0x0, 0x0, 0x48, 0x89, 0x84, 0x24, 0xE0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0xE0, 0x0, 0x0, 0x0, 0x8B, 0x0, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x58, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x83, 0x38, 0x0, 0xF, 0x84, 0x70, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x48, 0x83, 0xC0, 0x8, 0x48, 0x89, 0x84, 0x24, 0xF0, 0x0, 0x0, 0x0, 0xC7, 0x44, 0x24, 0x64, 0x0, 0x0, 0x0, 0x0, 0xEB, 0xA, 0x8B, 0x44, 0x24, 0x64, 0xFF, 0xC0, 0x89, 0x44, 0x24, 0x64, 0x8B, 0x44, 0x24, 0x64, 0x48, 0x89, 0x84, 0x24, 0xE8, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x4C, 0x24, 0x58, 0x8B, 0x49, 0x4, 0x48, 0x83, 0xE9, 0x8, 0x33, 0xD2, 0x48, 0x8B, 0xC1, 0xB9, 0x2, 0x0, 0x0, 0x0, 0x48, 0xF7, 0xF1, 0x48, 0x8B, 0x8C, 0x24, 0xE8, 0x0, 0x0, 0x0, 0x48, 0x3B, 0xC8, 0xF, 0x83, 0xF8, 0x0, 0x0, 0x0, 0x8B, 0x44, 0x24, 0x64, 0x48, 0x8B, 0x8C, 0x24, 0xF0, 0x0, 0x0, 0x0, 0xF, 0xB7, 0x4, 0x41, 0x66, 0x89, 0x44, 0x24, 0x20, 0xF, 0xB7, 0x44, 0x24, 0x20, 0x66, 0xC1, 0xE8, 0xC, 0x66, 0x83, 0xE0, 0xF, 0xF, 0xB7, 0xC0, 0x83, 0xF8, 0x3, 0x75, 0x5A, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x8B, 0x0, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0xB9, 0xFF, 0xF, 0x0, 0x0, 0xF, 0xB7, 0x54, 0x24, 0x20, 0x66, 0x23, 0xD1, 0xF, 0xB7, 0xCA, 0xF, 0xB7, 0xC9, 0x8B, 0x4, 0x8, 0x48, 0x3, 0x84, 0x24, 0xA8, 0x0, 0x0, 0x0, 0xB9, 0xFF, 0xF, 0x0, 0x0, 0xF, 0xB7, 0x54, 0x24, 0x20, 0x66, 0x23, 0xD1, 0xF, 0xB7, 0xCA, 0xF, 0xB7, 0xC9, 0x48, 0x8B, 0x54, 0x24, 0x58, 0x8B, 0x12, 0x4C, 0x8B, 0x44, 0x24, 0x28, 0x4C, 0x3, 0xC2, 0x49, 0x8B, 0xD0, 0x89, 0x4, 0xA, 0xEB, 0x6F, 0xF, 0xB7, 0x44, 0x24, 0x20, 0x66, 0xC1, 0xE8, 0xC, 0x66, 0x83, 0xE0, 0xF, 0xF, 0xB7, 0xC0, 0x83, 0xF8, 0xA, 0x75, 0x5A, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x8B, 0x0, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0xB9, 0xFF, 0xF, 0x0, 0x0, 0xF, 0xB7, 0x54, 0x24, 0x20, 0x66, 0x23, 0xD1, 0xF, 0xB7, 0xCA, 0xF, 0xB7, 0xC9, 0x48, 0x8B, 0x4, 0x8, 0x48, 0x3, 0x84, 0x24, 0xA8, 0x0, 0x0, 0x0, 0xB9, 0xFF, 0xF, 0x0, 0x0, 0xF, 0xB7, 0x54, 0x24, 0x20, 0x66, 0x23, 0xD1, 0xF, 0xB7, 0xCA, 0xF, 0xB7, 0xC9, 0x48, 0x8B, 0x54, 0x24, 0x58, 0x8B, 0x12, 0x4C, 0x8B, 0x44, 0x24, 0x28, 0x4C, 0x3, 0xC2, 0x49, 0x8B, 0xD0, 0x48, 0x89, 0x4, 0xA, 0xE9, 0xC8, 0xFE, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x58, 0x8B, 0x40, 0x4, 0x48, 0x8B, 0x4C, 0x24, 0x58, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x58, 0xE9, 0x82, 0xFE, 0xFF, 0xFF, 0xB8, 0x8, 0x0, 0x0, 0x0, 0x48, 0x6B, 0xC0, 0x1, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x48, 0x8D, 0x84, 0x1, 0x88, 0x0, 0x0, 0x0, 0x48, 0x89, 0x84, 0x24, 0xD0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0xD0, 0x0, 0x0, 0x0, 0x8B, 0x0, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x84, 0x24, 0xC0, 0x0, 0x0, 0x0, 0xC7, 0x44, 0x24, 0x48, 0x0, 0x0, 0x0, 0x0, 0xEB, 0xA, 0x8B, 0x44, 0x24, 0x48, 0xFF, 0xC0, 0x89, 0x44, 0x24, 0x48, 0x48, 0x63, 0x44, 0x24, 0x48, 0x48, 0x89, 0x84, 0x24, 0xF8, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x8C, 0x24, 0xD0, 0x0, 0x0, 0x0, 0x8B, 0x49, 0x4, 0x33, 0xD2, 0x8B, 0xC1, 0xB9, 0x14, 0x0, 0x0, 0x0, 0x48, 0xF7, 0xF1, 0x48, 0xFF, 0xC8, 0x48, 0x8B, 0x8C, 0x24, 0xF8, 0x0, 0x0, 0x0, 0x48, 0x3B, 0xC8, 0xF, 0x83, 0xB4, 0x1, 0x0, 0x0, 0x48, 0x63, 0x44, 0x24, 0x48, 0x48, 0x6B, 0xC0, 0x14, 0x48, 0x8B, 0x8C, 0x24, 0xC0, 0x0, 0x0, 0x0, 0x8B, 0x44, 0x1, 0xC, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x8B, 0xC8, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x8, 0x48, 0x89, 0x84, 0x24, 0xC8, 0x0, 0x0, 0x0, 0x48, 0x83, 0xBC, 0x24, 0xC8, 0x0, 0x0, 0x0, 0x0, 0x75, 0x7, 0x33, 0xC0, 0xE9, 0x4F, 0x3, 0x0, 0x0, 0x48, 0x63, 0x44, 0x24, 0x48, 0x48, 0x6B, 0xC0, 0x14, 0x48, 0x8B, 0x8C, 0x24, 0xC0, 0x0, 0x0, 0x0, 0x8B, 0x4, 0x1, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x84, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0x63, 0x44, 0x24, 0x48, 0x48, 0x6B, 0xC0, 0x14, 0x48, 0x8B, 0x8C, 0x24, 0xC0, 0x0, 0x0, 0x0, 0x8B, 0x44, 0x1, 0x10, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x78, 0x48, 0x83, 0xBC, 0x24, 0x90, 0x0, 0x0, 0x0, 0x0, 0x75, 0xD, 0x48, 0x8B, 0x44, 0x24, 0x78, 0x48, 0x89, 0x84, 0x24, 0x90, 0x0, 0x0, 0x0, 0xC7, 0x44, 0x24, 0x34, 0x0, 0x0, 0x0, 0x0, 0xEB, 0xA, 0x8B, 0x44, 0x24, 0x34, 0xFF, 0xC0, 0x89, 0x44, 0x24, 0x34, 0x48, 0x63, 0x44, 0x24, 0x34, 0x48, 0x8B, 0x4C, 0x24, 0x78, 0x48, 0x83, 0x3C, 0xC1, 0x0, 0xF, 0x84, 0xDA, 0x0, 0x0, 0x0, 0x48, 0x63, 0x44, 0x24, 0x34, 0x48, 0x8B, 0x8C, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0xBA, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x48, 0x8B, 0x4, 0xC1, 0x48, 0x23, 0xC2, 0x48, 0x85, 0xC0, 0x74, 0x46, 0x48, 0x63, 0x44, 0x24, 0x34, 0x48, 0x8B, 0x8C, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x4, 0xC1, 0x48, 0x25, 0xFF, 0xFF, 0x0, 0x0, 0x66, 0x89, 0x44, 0x24, 0x6C, 0xF, 0xB7, 0x44, 0x24, 0x6C, 0x8B, 0xD0, 0x48, 0x8B, 0x8C, 0x24, 0xC8, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x10, 0x48, 0x63, 0x4C, 0x24, 0x34, 0x48, 0x8B, 0x54, 0x24, 0x78, 0x48, 0x89, 0x4, 0xCA, 0xEB, 0x54, 0x48, 0x63, 0x44, 0x24, 0x34, 0x48, 0x8B, 0x8C, 0x24, 0x90, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x4, 0xC1, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x84, 0x24, 0x0, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0x0, 0x1, 0x0, 0x0, 0x48, 0x83, 0xC0, 0x2, 0x48, 0x8B, 0xD0, 0x48, 0x8B, 0x8C, 0x24, 0xC8, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x10, 0x48, 0x63, 0x4C, 0x24, 0x34, 0x48, 0x8B, 0x54, 0x24, 0x78, 0x48, 0x89, 0x4, 0xCA, 0x48, 0x63, 0x44, 0x24, 0x34, 0x48, 0x8B, 0x4C, 0x24, 0x78, 0x48, 0x83, 0x3C, 0xC1, 0x0, 0x75, 0x7, 0x33, 0xC0, 0xE9, 0xED, 0x1, 0x0, 0x0, 0xE9, 0x7, 0xFF, 0xFF, 0xFF, 0xE9, 0xA, 0xFE, 0xFF, 0xFF, 0xC7, 0x44, 0x24, 0x68, 0x0, 0x0, 0x0, 0x0, 0xEB, 0xA, 0x8B, 0x44, 0x24, 0x68, 0xFF, 0xC0, 0x89, 0x44, 0x24, 0x68, 0x48, 0x8B, 0x44, 0x24, 0x38, 0xF, 0xB7, 0x40, 0x6, 0x39, 0x44, 0x24, 0x68, 0xF, 0x8D, 0x86, 0x1, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x38, 0xF, 0xB7, 0x40, 0x14, 0x48, 0x8B, 0x4C, 0x24, 0x38, 0x48, 0x8D, 0x44, 0x1, 0x18, 0x48, 0x63, 0x4C, 0x24, 0x68, 0x48, 0x6B, 0xC9, 0x28, 0x48, 0x3, 0xC1, 0x48, 0x89, 0x44, 0x24, 0x50, 0xC7, 0x44, 0x24, 0x30, 0x0, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x2, 0x85, 0xC0, 0x74, 0x25, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x10, 0x48, 0x8B, 0x4C, 0x24, 0x50, 0x8B, 0x49, 0x8, 0x41, 0xB8, 0x0, 0x40, 0x0, 0x0, 0x8B, 0xD0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x20, 0xEB, 0x81, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x20, 0x85, 0xC0, 0x74, 0x5B, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x40, 0x85, 0xC0, 0x74, 0x25, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x80, 0x85, 0xC0, 0x74, 0xA, 0xC7, 0x44, 0x24, 0x30, 0x40, 0x0, 0x0, 0x0, 0xEB, 0x8, 0xC7, 0x44, 0x24, 0x30, 0x20, 0x0, 0x0, 0x0, 0xEB, 0x23, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x80, 0x85, 0xC0, 0x74, 0xA, 0xC7, 0x44, 0x24, 0x30, 0x80, 0x0, 0x0, 0x0, 0xEB, 0x8, 0xC7, 0x44, 0x24, 0x30, 0x10, 0x0, 0x0, 0x0, 0xEB, 0x59, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x40, 0x85, 0xC0, 0x74, 0x25, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x80, 0x85, 0xC0, 0x74, 0xA, 0xC7, 0x44, 0x24, 0x30, 0x4, 0x0, 0x0, 0x0, 0xEB, 0x8, 0xC7, 0x44, 0x24, 0x30, 0x2, 0x0, 0x0, 0x0, 0xEB, 0x23, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x80, 0x85, 0xC0, 0x74, 0xA, 0xC7, 0x44, 0x24, 0x30, 0x8, 0x0, 0x0, 0x0, 0xEB, 0x8, 0xC7, 0x44, 0x24, 0x30, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x24, 0x25, 0x0, 0x0, 0x0, 0x4, 0x85, 0xC0, 0x74, 0xC, 0x8B, 0x44, 0x24, 0x30, 0xF, 0xBA, 0xE8, 0x9, 0x89, 0x44, 0x24, 0x30, 0x48, 0x8B, 0x44, 0x24, 0x50, 0x8B, 0x40, 0x10, 0x48, 0x8B, 0x4C, 0x24, 0x50, 0x8B, 0x49, 0xC, 0x48, 0x8B, 0x54, 0x24, 0x28, 0x48, 0x3, 0xD1, 0x48, 0x8B, 0xCA, 0x4C, 0x8D, 0x8C, 0x24, 0xD8, 0x0, 0x0, 0x0, 0x44, 0x8B, 0x44, 0x24, 0x30, 0x8B, 0xD0, 0x48, 0x8B, 0x84, 0x24, 0x20, 0x1, 0x0, 0x0, 0xFF, 0x50, 0x28, 0x85, 0xC0, 0x75, 0x4, 0x33, 0xC0, 0xEB, 0x3B, 0xE9, 0x5D, 0xFE, 0xFF, 0xFF, 0x48, 0x8B, 0x44, 0x24, 0x38, 0x8B, 0x40, 0x28, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0x48, 0x3, 0xC8, 0x48, 0x8B, 0xC1, 0x48, 0x89, 0x84, 0x24, 0x8, 0x1, 0x0, 0x0, 0x45, 0x33, 0xC0, 0xBA, 0x1, 0x0, 0x0, 0x0, 0x48, 0x8B, 0x4C, 0x24, 0x28, 0xFF, 0x94, 0x24, 0x8, 0x1, 0x0, 0x0, 0x8B, 0x84, 0x24, 0xA8, 0x0, 0x0, 0x0, 0x48, 0x81, 0xC4, 0x18, 0x1, 0x0, 0x0, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC};

        public static byte[] reflectiveloader_shellcode_x86  = new byte[] { 0x55, 0x8B, 0xEC, 0x83, 0xEC, 0x7C, 0x56, 0x57, 0x8B, 0x45, 0x8, 0x8B, 0x8, 0x89, 0x4D, 0xA8, 0x8B, 0x55, 0xA8, 0xF, 0xB7, 0x2, 0x3D, 0x4D, 0x5A, 0x0, 0x0, 0x74, 0x7, 0x33, 0xC0, 0xE9, 0x1F, 0x6, 0x0, 0x0, 0x8B, 0x4D, 0x8, 0x8B, 0x11, 0x8B, 0x45, 0xA8, 0x3, 0x50, 0x3C, 0x89, 0x55, 0xD8, 0x8B, 0x4D, 0xD8, 0x81, 0x39, 0x50, 0x45, 0x0, 0x0, 0x74, 0x7, 0x33, 0xC0, 0xE9, 0xFF, 0x5, 0x0, 0x0, 0x6A, 0x4, 0x68, 0x0, 0x20, 0x0, 0x0, 0x8B, 0x55, 0xD8, 0x8B, 0x42, 0x50, 0x50, 0x8B, 0x4D, 0xD8, 0x8B, 0x51, 0x34, 0x52, 0x8B, 0x45, 0x8, 0x8B, 0x48, 0xC, 0xFF, 0xD1, 0x89, 0x45, 0xF4, 0x83, 0x7D, 0xF4, 0x0, 0x75, 0x1B, 0x6A, 0x4, 0x68, 0x0, 0x20, 0x0, 0x0, 0x8B, 0x55, 0xD8, 0x8B, 0x42, 0x50, 0x50, 0x6A, 0x0, 0x8B, 0x4D, 0x8, 0x8B, 0x51, 0xC, 0xFF, 0xD2, 0x89, 0x45, 0xF4, 0x6A, 0x4, 0x68, 0x0, 0x10, 0x0, 0x0, 0x8B, 0x45, 0xD8, 0x8B, 0x48, 0x54, 0x51, 0x8B, 0x55, 0xF4, 0x52, 0x8B, 0x45, 0x8, 0x8B, 0x48, 0xC, 0xFF, 0xD1, 0xC7, 0x45, 0xD0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x55, 0xD0, 0x83, 0xC2, 0x1, 0x89, 0x55, 0xD0, 0x8B, 0x45, 0xD8, 0x8B, 0x4D, 0xD0, 0x3B, 0x48, 0x54, 0x73, 0x15, 0x8B, 0x55, 0x8, 0x8B, 0x2, 0x8B, 0x4D, 0xF4, 0x3, 0x4D, 0xD0, 0x8B, 0x55, 0xD0, 0x8A, 0x4, 0x10, 0x88, 0x1, 0xEB, 0xD7, 0x8B, 0x4D, 0xA8, 0x8B, 0x55, 0xF4, 0x3, 0x51, 0x3C, 0x89, 0x55, 0xF0, 0xC7, 0x45, 0xC0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x45, 0xC0, 0x83, 0xC0, 0x1, 0x89, 0x45, 0xC0, 0x8B, 0x4D, 0xF0, 0xF, 0xB7, 0x51, 0x6, 0x39, 0x55, 0xC0, 0xF, 0x8D, 0x66, 0x1, 0x0, 0x0, 0x8B, 0x45, 0xF0, 0xF, 0xB7, 0x48, 0x14, 0x8B, 0x55, 0xF0, 0x8D, 0x44, 0xA, 0x18, 0x6B, 0x4D, 0xC0, 0x28, 0x3, 0xC1, 0x89, 0x45, 0xEC, 0xC7, 0x45, 0xA4, 0x0, 0x0, 0x0, 0x0, 0x8B, 0x55, 0xEC, 0x83, 0x7A, 0x10, 0x0, 0x74, 0x67, 0x6A, 0x4, 0x68, 0x0, 0x10, 0x0, 0x0, 0x8B, 0x45, 0xEC, 0x8B, 0x48, 0x10, 0x51, 0x8B, 0x55, 0xEC, 0x8B, 0x45, 0xF4, 0x3, 0x42, 0xC, 0x50, 0x8B, 0x4D, 0x8, 0x8B, 0x51, 0xC, 0xFF, 0xD2, 0x89, 0x45, 0xA4, 0xC7, 0x45, 0xCC, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x45, 0xCC, 0x83, 0xC0, 0x1, 0x89, 0x45, 0xCC, 0x8B, 0x4D, 0xEC, 0x8B, 0x55, 0xCC, 0x3B, 0x51, 0x10, 0x73, 0x22, 0x8B, 0x45, 0x8, 0x8B, 0x8, 0x8B, 0x55, 0xEC, 0x3, 0x4A, 0x14, 0x8B, 0x45, 0xEC, 0x8B, 0x55, 0xF4, 0x3, 0x50, 0xC, 0x8B, 0x45, 0xCC, 0x8B, 0x75, 0xCC, 0x8A, 0xC, 0x31, 0x88, 0xC, 0x2, 0xEB, 0xCA, 0xE9, 0xD3, 0x0, 0x0, 0x0, 0x8B, 0x55, 0xEC, 0x83, 0x7A, 0x24, 0x40, 0x75, 0x60, 0x6A, 0x4, 0x68, 0x0, 0x10, 0x0, 0x0, 0x8B, 0x45, 0xF0, 0x8B, 0x48, 0x20, 0x51, 0x8B, 0x55, 0xEC, 0x8B, 0x45, 0xF4, 0x3, 0x42, 0xC, 0x50, 0x8B, 0x4D, 0x8, 0x8B, 0x51, 0xC, 0xFF, 0xD2, 0x89, 0x45, 0xA4, 0xC7, 0x45, 0xBC, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x45, 0xBC, 0x83, 0xC0, 0x1, 0x89, 0x45, 0xBC, 0x8B, 0x4D, 0xF0, 0x8B, 0x55, 0xBC, 0x3B, 0x51, 0x20, 0x73, 0x12, 0x8B, 0x45, 0xEC, 0x8B, 0x4D, 0xF4, 0x3, 0x48, 0xC, 0x8B, 0x55, 0xBC, 0xC6, 0x4, 0x11, 0x0, 0xEB, 0xDA, 0x8B, 0x45, 0xEC, 0x8B, 0x4D, 0xF0, 0x8B, 0x51, 0x20, 0x89, 0x50, 0x10, 0xEB, 0x6A, 0x8B, 0x45, 0xEC, 0x81, 0x78, 0x24, 0x80, 0x0, 0x0, 0x0, 0x75, 0x5E, 0x6A, 0x4, 0x68, 0x0, 0x10, 0x0, 0x0, 0x8B, 0x4D, 0xF0, 0x8B, 0x51, 0x24, 0x52, 0x8B, 0x45, 0xEC, 0x8B, 0x4D, 0xF4, 0x3, 0x48, 0xC, 0x51, 0x8B, 0x55, 0x8, 0x8B, 0x42, 0xC, 0xFF, 0xD0, 0x89, 0x45, 0xA4, 0xC7, 0x45, 0xB8, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x4D, 0xB8, 0x83, 0xC1, 0x1, 0x89, 0x4D, 0xB8, 0x8B, 0x55, 0xF0, 0x8B, 0x45, 0xB8, 0x3B, 0x42, 0x24, 0x73, 0x12, 0x8B, 0x4D, 0xEC, 0x8B, 0x55, 0xF4, 0x3, 0x51, 0xC, 0x8B, 0x45, 0xB8, 0xC6, 0x4, 0x2, 0x0, 0xEB, 0xDA, 0x8B, 0x4D, 0xEC, 0x8B, 0x55, 0xF0, 0x8B, 0x42, 0x24, 0x89, 0x41, 0x10, 0xE9, 0x81, 0xFE, 0xFF, 0xFF, 0x8B, 0x4D, 0xF0, 0x8B, 0x55, 0xF4, 0x2B, 0x51, 0x34, 0x89, 0x55, 0xAC, 0xF, 0x84, 0x12, 0x1, 0x0, 0x0, 0xB8, 0x8, 0x0, 0x0, 0x0, 0x6B, 0xC8, 0x5, 0x8B, 0x55, 0xF0, 0x8D, 0x44, 0xA, 0x78, 0x89, 0x45, 0x94, 0x8B, 0x4D, 0x94, 0x8B, 0x55, 0xF4, 0x3, 0x11, 0x89, 0x55, 0xE0, 0x8B, 0x45, 0xE0, 0x83, 0x38, 0x0, 0xF, 0x84, 0xE9, 0x0, 0x0, 0x0, 0x8B, 0x4D, 0xE0, 0x83, 0xC1, 0x8, 0x89, 0x4D, 0x90, 0xC7, 0x45, 0xB4, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x55, 0xB4, 0x83, 0xC2, 0x1, 0x89, 0x55, 0xB4, 0x8B, 0x45, 0xE0, 0x8B, 0x48, 0x4, 0x83, 0xE9, 0x8, 0xD1, 0xE9, 0x39, 0x4D, 0xB4, 0xF, 0x83, 0xA9, 0x0, 0x0, 0x0, 0x8B, 0x55, 0xB4, 0x8B, 0x45, 0x90, 0x66, 0x8B, 0xC, 0x50, 0x66, 0x89, 0x4D, 0xFC, 0x66, 0x8B, 0x55, 0xFC, 0x66, 0xC1, 0xEA, 0xC, 0x66, 0x83, 0xE2, 0xF, 0xF, 0xB7, 0xC2, 0x83, 0xF8, 0x3, 0x75, 0x33, 0x8B, 0x4D, 0xE0, 0x8B, 0x55, 0xF4, 0x3, 0x11, 0xB8, 0xFF, 0xF, 0x0, 0x0, 0x66, 0x23, 0x45, 0xFC, 0xF, 0xB7, 0xC8, 0x8B, 0x14, 0xA, 0x3, 0x55, 0xAC, 0xB8, 0xFF, 0xF, 0x0, 0x0, 0x66, 0x23, 0x45, 0xFC, 0xF, 0xB7, 0xC8, 0x8B, 0x45, 0xE0, 0x8B, 0x75, 0xF4, 0x3, 0x30, 0x89, 0x14, 0xE, 0xEB, 0x4F, 0x66, 0x8B, 0x4D, 0xFC, 0x66, 0xC1, 0xE9, 0xC, 0x66, 0x83, 0xE1, 0xF, 0xF, 0xB7, 0xD1, 0x83, 0xFA, 0xA, 0x75, 0x3B, 0x8B, 0x45, 0xE0, 0x8B, 0x4D, 0xF4, 0x3, 0x8, 0xBA, 0xFF, 0xF, 0x0, 0x0, 0x66, 0x23, 0x55, 0xFC, 0xF, 0xB7, 0xC2, 0x8B, 0x55, 0xAC, 0x33, 0xF6, 0x3, 0x14, 0x1, 0x13, 0x74, 0x1, 0x4, 0xB8, 0xFF, 0xF, 0x0, 0x0, 0x66, 0x23, 0x45, 0xFC, 0xF, 0xB7, 0xC8, 0x8B, 0x45, 0xE0, 0x8B, 0x7D, 0xF4, 0x3, 0x38, 0x89, 0x14, 0xF, 0x89, 0x74, 0xF, 0x4, 0xE9, 0x3A, 0xFF, 0xFF, 0xFF, 0x8B, 0x4D, 0xE0, 0x8B, 0x55, 0xE0, 0x3, 0x51, 0x4, 0x89, 0x55, 0xE0, 0xE9, 0xB, 0xFF, 0xFF, 0xFF, 0xB8, 0x8, 0x0, 0x0, 0x0, 0xC1, 0xE0, 0x0, 0x8B, 0x4D, 0xF0, 0x8D, 0x54, 0x1, 0x78, 0x89, 0x55, 0x98, 0x8B, 0x45, 0x98, 0x8B, 0x4D, 0xF4, 0x3, 0x8, 0x89, 0x4D, 0xA0, 0xC7, 0x45, 0xD4, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x55, 0xD4, 0x83, 0xC2, 0x1, 0x89, 0x55, 0xD4, 0x8B, 0x45, 0x98, 0x8B, 0x40, 0x4, 0x33, 0xD2, 0xB9, 0x14, 0x0, 0x0, 0x0, 0xF7, 0xF1, 0x83, 0xE8, 0x1, 0x39, 0x45, 0xD4, 0xF, 0x83, 0xFE, 0x0, 0x0, 0x0, 0x6B, 0x55, 0xD4, 0x14, 0x8B, 0x45, 0xA0, 0x8B, 0x4D, 0xF4, 0x3, 0x4C, 0x10, 0xC, 0x51, 0x8B, 0x55, 0x8, 0x8B, 0x42, 0x4, 0xFF, 0xD0, 0x89, 0x45, 0x9C, 0x83, 0x7D, 0x9C, 0x0, 0x75, 0x7, 0x33, 0xC0, 0xE9, 0x49, 0x2, 0x0, 0x0, 0x6B, 0x4D, 0xD4, 0x14, 0x8B, 0x55, 0xA0, 0x8B, 0x45, 0xF4, 0x3, 0x4, 0xA, 0x89, 0x45, 0xC8, 0x6B, 0x4D, 0xD4, 0x14, 0x8B, 0x55, 0xA0, 0x8B, 0x45, 0xF4, 0x3, 0x44, 0xA, 0x10, 0x89, 0x45, 0xC4, 0x83, 0x7D, 0xC8, 0x0, 0x75, 0x6, 0x8B, 0x4D, 0xC4, 0x89, 0x4D, 0xC8, 0xC7, 0x45, 0xDC, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x55, 0xDC, 0x83, 0xC2, 0x1, 0x89, 0x55, 0xDC, 0x8B, 0x45, 0xDC, 0x8B, 0x4D, 0xC4, 0x83, 0x3C, 0x81, 0x0, 0xF, 0x84, 0x83, 0x0, 0x0, 0x0, 0x8B, 0x55, 0xDC, 0x8B, 0x45, 0xC8, 0x8B, 0xC, 0x90, 0x81, 0xE1, 0x0, 0x0, 0x0, 0x80, 0x74, 0x2F, 0x8B, 0x55, 0xDC, 0x8B, 0x45, 0xC8, 0x8B, 0xC, 0x90, 0x81, 0xE1, 0xFF, 0xFF, 0x0, 0x0, 0x66, 0x89, 0x4D, 0xF8, 0xF, 0xB7, 0x55, 0xF8, 0x52, 0x8B, 0x45, 0x9C, 0x50, 0x8B, 0x4D, 0x8, 0x8B, 0x51, 0x8, 0xFF, 0xD2, 0x8B, 0x4D, 0xDC, 0x8B, 0x55, 0xC4, 0x89, 0x4, 0x8A, 0xEB, 0x2B, 0x8B, 0x45, 0xDC, 0x8B, 0x4D, 0xC8, 0x8B, 0x55, 0xF4, 0x3, 0x14, 0x81, 0x89, 0x55, 0x8C, 0x8B, 0x45, 0x8C, 0x83, 0xC0, 0x2, 0x50, 0x8B, 0x4D, 0x9C, 0x51, 0x8B, 0x55, 0x8, 0x8B, 0x42, 0x8, 0xFF, 0xD0, 0x8B, 0x4D, 0xDC, 0x8B, 0x55, 0xC4, 0x89, 0x4, 0x8A, 0x8B, 0x45, 0xDC, 0x8B, 0x4D, 0xC4, 0x83, 0x3C, 0x81, 0x0, 0x75, 0x7, 0x33, 0xC0, 0xE9, 0x7C, 0x1, 0x0, 0x0, 0xE9, 0x64, 0xFF, 0xFF, 0xFF, 0xE9, 0xDE, 0xFE, 0xFF, 0xFF, 0xC7, 0x45, 0xB0, 0x0, 0x0, 0x0, 0x0, 0xEB, 0x9, 0x8B, 0x55, 0xB0, 0x83, 0xC2, 0x1, 0x89, 0x55, 0xB0, 0x8B, 0x45, 0xF0, 0xF, 0xB7, 0x48, 0x6, 0x39, 0x4D, 0xB0, 0xF, 0x8D, 0x36, 0x1, 0x0, 0x0, 0x8B, 0x55, 0xF0, 0xF, 0xB7, 0x42, 0x14, 0x8B, 0x4D, 0xF0, 0x8D, 0x54, 0x1, 0x18, 0x6B, 0x45, 0xB0, 0x28, 0x3, 0xD0, 0x89, 0x55, 0xE8, 0xC7, 0x45, 0xE4, 0x0, 0x0, 0x0, 0x0, 0x8B, 0x4D, 0xE8, 0x8B, 0x51, 0x24, 0x81, 0xE2, 0x0, 0x0, 0x0, 0x2, 0x74, 0x1D, 0x68, 0x0, 0x40, 0x0, 0x0, 0x8B, 0x45, 0xE8, 0x8B, 0x48, 0x10, 0x51, 0x8B, 0x55, 0xE8, 0x8B, 0x42, 0x8, 0x50, 0x8B, 0x4D, 0x8, 0x8B, 0x51, 0x10, 0xFF, 0xD2, 0xEB, 0x9E, 0x8B, 0x45, 0xE8, 0x8B, 0x48, 0x24, 0x81, 0xE1, 0x0, 0x0, 0x0, 0x20, 0x74, 0x4D, 0x8B, 0x55, 0xE8, 0x8B, 0x42, 0x24, 0x25, 0x0, 0x0, 0x0, 0x40, 0x74, 0x20, 0x8B, 0x4D, 0xE8, 0x8B, 0x51, 0x24, 0x81, 0xE2, 0x0, 0x0, 0x0, 0x80, 0x74, 0x9, 0xC7, 0x45, 0xE4, 0x40, 0x0, 0x0, 0x0, 0xEB, 0x7, 0xC7, 0x45, 0xE4, 0x20, 0x0, 0x0, 0x0, 0xEB, 0x1E, 0x8B, 0x45, 0xE8, 0x8B, 0x48, 0x24, 0x81, 0xE1, 0x0, 0x0, 0x0, 0x80, 0x74, 0x9, 0xC7, 0x45, 0xE4, 0x80, 0x0, 0x0, 0x0, 0xEB, 0x7, 0xC7, 0x45, 0xE4, 0x10, 0x0, 0x0, 0x0, 0xEB, 0x4B, 0x8B, 0x55, 0xE8, 0x8B, 0x42, 0x24, 0x25, 0x0, 0x0, 0x0, 0x40, 0x74, 0x20, 0x8B, 0x4D, 0xE8, 0x8B, 0x51, 0x24, 0x81, 0xE2, 0x0, 0x0, 0x0, 0x80, 0x74, 0x9, 0xC7, 0x45, 0xE4, 0x4, 0x0, 0x0, 0x0, 0xEB, 0x7, 0xC7, 0x45, 0xE4, 0x2, 0x0, 0x0, 0x0, 0xEB, 0x1E, 0x8B, 0x45, 0xE8, 0x8B, 0x48, 0x24, 0x81, 0xE1, 0x0, 0x0, 0x0, 0x80, 0x74, 0x9, 0xC7, 0x45, 0xE4, 0x8, 0x0, 0x0, 0x0, 0xEB, 0x7, 0xC7, 0x45, 0xE4, 0x1, 0x0, 0x0, 0x0, 0x8B, 0x55, 0xE8, 0x8B, 0x42, 0x24, 0x25, 0x0, 0x0, 0x0, 0x4, 0x74, 0xC, 0x8B, 0x4D, 0xE4, 0x81, 0xC9, 0x0, 0x2, 0x0, 0x0, 0x89, 0x4D, 0xE4, 0x8D, 0x55, 0x84, 0x52, 0x8B, 0x45, 0xE4, 0x50, 0x8B, 0x4D, 0xE8, 0x8B, 0x51, 0x10, 0x52, 0x8B, 0x45, 0xE8, 0x8B, 0x4D, 0xF4, 0x3, 0x48, 0xC, 0x51, 0x8B, 0x55, 0x8, 0x8B, 0x42, 0x14, 0xFF, 0xD0, 0x85, 0xC0, 0x75, 0x4, 0x33, 0xC0, 0xEB, 0x1F, 0xE9, 0xB1, 0xFE, 0xFF, 0xFF, 0x8B, 0x4D, 0xF0, 0x8B, 0x55, 0xF4, 0x3, 0x51, 0x28, 0x89, 0x55, 0x88, 0x6A, 0x0, 0x6A, 0x1, 0x8B, 0x45, 0xF4, 0x50, 0xFF, 0x55, 0x88, 0x8B, 0x45, 0xAC, 0x5F, 0x5E, 0x8B, 0xE5, 0x5D, 0xC2, 0x4, 0x0, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC };
        
        public static byte[] PrepareShellcodeForThreadHijackingx86(UInt32 funcaddress, UInt32 param, UInt32 returnaddress, UInt32 returninstruction, UInt32 getcurrentthreadaddress, UInt32 suspendthreadaddress, UInt32 suspendthreadreturnaddress)
        {
            byte[] shellcode = new byte[]  {
                0x68, 0, 0, 0, 0,	 // return address					Offset 1
		        0x9C,				 // pushfd
		        0x60,				 // pushad

		        0x68, 0, 0, 0, 0,	 // push param						Offset 8
		        0xB8, 0, 0, 0, 0,	 // mov eax, &Loadlib				Offset +13
		        0xFF, 0xD0,			 // call eax
		        0xA3, 0, 0, 0, 0,	 // mov &loadlibreturn, eax			Offset +20 	
		
		        0xB8, 0, 0, 0, 0,	 // mov eax, &GetCurrentThread		Offset +25
		        0xFF, 0xD0,			 // call eax	  
		        0x50, 			     // push eax (thread handle)

		        0xB8, 0, 0, 0, 0,	 // mov eax, &Suspendthread			Offset +33
		        0xFF, 0xD0,			 // call eax
		        0xA3, 0, 0, 0, 0,	 // mov &Suspendthread return, eax	Offset +40
		
		        0x61,				 // popad
		        0x9D,				 // popfd
		        0xc3,			     // ret	  		
            };

            CopyToByteArray(returninstruction, shellcode, 1);
            CopyToByteArray(param, shellcode, 8);
            CopyToByteArray(funcaddress, shellcode, 13);
            CopyToByteArray(returnaddress, shellcode, 20);
            CopyToByteArray(getcurrentthreadaddress,shellcode, 25);
            CopyToByteArray(suspendthreadaddress, shellcode, 33);
            CopyToByteArray(suspendthreadreturnaddress, shellcode, 40);

            return shellcode;
        }
    }
}
